services:
  
  #  Authentication
  auth:
    container_name: auth
    build:
      context: ../Auth
      dockerfile: Dockerfile
    ports:
      - "5500:5500"
    depends_on:
      - auth_db
    networks:
      - krk-network
  auth_db:
    container_name: auth_db
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: auth_db
    volumes:
      - data_auth:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - krk-network
  keycloak_db:
    container_name: keycloak_db
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: keycloak
    volumes:
      - data_keycloak:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - krk-network
  keycloak:
    image: quay.io/keycloak/keycloak:21.1
    container_name: keycloak
    restart: unless-stopped
    volumes:
      - ./Configurations:/opt/keycloak/data/import
    environment:
      KEYCLOAK_FRONTEND_URL: "localhost"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak_db
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_HOSTNAME: localhost
    command: start-dev --import-realm
    ports:
      - "8081:8080"
    depends_on:
      - keycloak_db
    networks:
      - krk-network
  
  #  Subscriptions
  subscriptions:
    container_name: subscriptions
    build:
      context: ../Subscriptions
      dockerfile: Dockerfile
    ports:
      - "5501:5501"
    depends_on:
      - subscriptions_db
    networks:
      - krk-network
  subscriptions_db:
    container_name: subscriptions_db
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: subscriptions_db
    volumes:
      - data_subscriptions:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - krk-network

  #  Profiles
  profiles:
    container_name: profiles
    build:
      context: .
      dockerfile: ../Profiles/Dockerfile
    environment:
      BUILD_CONFIGURATION: Release
    ports:
      - "80:80"
    depends_on:
      - profiles_db
    networks:
      - krk-network
  profiles_db:
    container_name: profiles_db
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: profiles_db
    volumes:
      - data_profiles:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - krk-network


volumes:
  data_auth:
  data_keycloak:
  data_subscriptions:
  data_profiles:

networks:
  krk-network:
